// Generated by dts-bundle v0.4.3
// Dependencies for this module:
//   ../../sequelize

declare module 'alliance/db' {
    import * as Sequelize from 'sequelize';
    export { Table } from 'alliance/db/decorators/db/Table';
    export { hasOne, hasMany, belongsTo, belongsToMany } from 'alliance/db/decorators/db/Relationships';
    export { DAO } from 'alliance/db/decorators/db/DAO';
    export { AbstractDAO } from 'alliance/db/components/database/DAO/AbstractDAO';
    export { Query } from 'alliance/db/components/database/database/Query';
    export { Sequelize as db };
    export { Column } from 'alliance/db/components/database/database/Columns';
    export { ColumnType } from 'alliance/db/components/database/database/Columns';
}

declare module 'alliance/db/decorators/db/Table' {
    export function Table(target: any): (t: any) => void;
}

declare module 'alliance/db/decorators/db/Relationships' {
    export function hasMany(target: Function, key?: string): (t: any, k: any) => void;
    export function hasOne(target: Function, key?: string): (t: any, k: any) => void;
    export function belongsTo(target: Function, key?: string): (t: any, k: any) => void;
    export function belongsToMany(target: Function, key?: string): (t: any, k: any) => void;
}

declare module 'alliance/db/decorators/db/DAO' {
    export function DAO(table: any): (target: any) => any;
}

declare module 'alliance/db/components/database/DAO/AbstractDAO' {
    import * as Sequelize from 'sequelize';
    export abstract class AbstractDAO<T> {
        schema: T;
        Query: Sequelize.Model<T, any>;
    }
}

declare module 'alliance/db/components/database/database/Query' {
    export function Query(table: any): any;
}

declare module 'alliance/db/components/database/database/Columns' {
    export let Column: Object;
    export let ColumnType: Object;
}

