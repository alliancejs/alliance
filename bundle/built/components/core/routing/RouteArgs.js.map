{"version":3,"sources":["components/core/routing/RouteArgs.ts"],"names":["RouteArgs","RouteArgs.constructor","RouteArgs.build","RouteArgs.pathVariable","RouteArgs.requestParam"],"mappings":";;;;;;AAEA,IAAA,YAAA,GAAA,OAAA,CAA8B,sBAAsB,CAAC,CAAA;AACrD,IAAA,WAAA,GAAA,OAAA,CAAoE,oCAAoC,CAAC,CAAA;;IAEzG,SAAA;AAKIA,aALJ,SAAA,CAKuBA,MAAWA,EAASA,IAAcA,EAASA,OAAwBA,EAASA,GAAWA,EAAAA;8BAL9G,SAAA;;AAKuBC,YAAAA,CAAAA,MAAMA,GAANA,MAAMA,CAAKA;AAASA,YAAAA,CAAAA,IAAIA,GAAJA,IAAIA,CAAUA;AAASA,YAAAA,CAAAA,OAAOA,GAAPA,OAAOA,CAAiBA;AAASA,YAAAA,CAAAA,GAAGA,GAAHA,GAAGA,CAAQA;KAEzGA;;iBAPL,SAAA;;gCASgBD;AACRE,gBAAIA,IAAIA,GAAGA,EAAEA,CAACA;AAEdA,gBAAIA,OAAOA,CAACA,WAAWA,CAACA,WAAAA,CAAAA,YAAYA,EAAEA,IAAIA,CAACA,MAAMA,EAAEA,IAAIA,CAACA,GAAGA,CAACA,EAAEA;AAC1DA,oBAAIA,CAACA,UAAUA,GAAGA,YAAAA,CAAAA,aAAaA,CAACA,IAAIA,CAACA,IAAIA,CAACA,CAACA;;;;;;AAE3CA,yCAAwCA,OAAOA,CAACA,WAAWA,CAACA,WAAAA,CAAAA,YAAYA,EAAEA,IAAIA,CAACA,MAAMA,EAAEA,IAAIA,CAACA,GAAGA,CAACA,8HAAEA;4BAAzFA,GAAGA;;AACRA,gCAAQA,GAAGA,CAACA,IAAIA;AACZA,iCAAKA,WAAAA,CAAAA,gBAAgBA,CAACA,YAAYA;AAC9BA,oCAAIA,CAACA,YAAYA,CAACA,GAAGA,CAACA,CAACA;AAC3BA,sCAAMA;AAAAA,AACNA,iCAAKA,WAAAA,CAAAA,gBAAgBA,CAACA,YAAYA;AAC9BA,oCAAIA,CAACA,YAAYA,CAACA,GAAGA,CAACA,CAACA;AAC3BA,sCAAMA;AAAAA,yBACTA;AAEDA,4BAAIA,CAACA,MAAMA,CAACA,GAAGA,CAACA,cAAcA,EAAEA,CAACA,EAAEA,IAAIA,CAACA,KAAKA,CAACA,CAACA;qBAClDA;;;;;;;;;;;;;;;aACJA;AAEDA,mBAAOA,IAAIA,CAACA;SACfA;;;qCAEoBF,GAAwBA,EAAAA;AACzCG,gBAAIA,CAACA,KAAKA,GAAGA,IAAIA,CAACA,OAAOA,CAACA,MAAMA,CAAEA,IAAIA,CAACA,UAAUA,CAACA,GAAGA,CAACA,cAAcA,CAACA,CAAEA,CAACA;SAC3EA;;;qCAEoBH,GAAwBA,EAAAA;AACzCI,gBAAIA,CAACA,KAAKA,GAAGA,IAAIA,CAACA,OAAOA,CAACA,KAAKA,CAAEA,IAAIA,CAACA,UAAUA,CAACA,GAAGA,CAACA,cAAcA,CAACA,CAAEA,CAACA;SAC1EA;;;WAtCL,SAAA;;;AAAa,OAAA,CAAA,SAAS,GAAA,SAwCrB,CAAA","file":"components/core/routing/RouteArgs.js","sourcesContent":["import * as express from 'express';\n\nimport { getParamNames } from '../../lib/ParamNames';\nimport { allianceArgs, allianceArgsType, allianceArgAbstract } from '../../../decorators/core/ArgsTypes';\n\nexport class RouteArgs {\n\n    value: any;\n    paramNames: string[];\n\n    constructor(public target: any, public func: Function, public request: express.Request, public key: string) {\n        // return args;\n    }\n\n    public build(): any[] {\n        let args = [];\n\n        if (Reflect.hasMetadata(allianceArgs, this.target, this.key)) {\n            this.paramNames = getParamNames(this.func);\n\n            for (let arg of <allianceArgAbstract[]> Reflect.getMetadata(allianceArgs, this.target, this.key)) {\n                switch (arg.type) {\n                    case allianceArgsType.PathVariable:\n                        this.pathVariable(arg);\n                    break;\n                    case allianceArgsType.RequestParam:\n                        this.requestParam(arg);\n                    break;\n                }\n\n                args.splice(arg.parameterIndex, 0, this.value);\n            }\n        }\n\n        return args;\n    }\n\n    private pathVariable(arg: allianceArgAbstract): void {\n        this.value = this.request.params[ this.paramNames[arg.parameterIndex] ];\n    }\n\n    private requestParam(arg: allianceArgAbstract): void {\n        this.value = this.request.query[ this.paramNames[arg.parameterIndex] ];\n    }\n\n}\n"],"sourceRoot":"/source/"}