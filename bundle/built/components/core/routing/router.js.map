{"version":3,"sources":["components/core/routing/router.ts"],"names":["Route","Route.constructor","RouteResponse","RouteResponse.constructor","RouteResponse.execute","RouteResponse.render","RouteResponse.setViewParams","RouteResponse.setContext","RouteResponse.log"],"mappings":"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","file":"components/core/routing/router.js","sourcesContent":["/**\n * Alliance : TypeScript framework for NodeJS (http://alliancejs.com)\n * Copyright (c) Eugene Pisotsky (http://alliancejs.com)\n *\n * Licensed under The MIT License\n * For full copyright and license information, please see the LICENSE.txt\n * Redistributions of files must retain the above copyright notice.\n *\n * @copyright     Copyright (c) Eugene Pisotsky (http://alliancejs.com)\n * @link          http://alliancejs.com Alliance Project\n * @license       http://www.opensource.org/licenses/mit-license.php MIT License\n */\n\nimport * as express  from 'express';\nimport * as path from 'path';\nimport * as bodyParser from 'body-parser';\nimport { allianceBodyParser } from '../../../decorators/core/_paramTypes';\nimport { RouteParams } from './routeParams';\nimport { server } from '../../bundle';\nimport { Log } from '../debug/log';\n\nexport class Route {\n\n    actionClass: any;\n\n    constructor(path, context, key) {\n        if (Reflect.hasMetadata(allianceBodyParser, context.prototype, key)) {\n            server.express.use(path, bodyParser.json());\n        }\n\n        server.express.all(path, (req, res, next) => {\n            this.actionClass = new RouteResponse(context, key, req, res, next);\n            this.actionClass.execute();\n        });\n\n        server.express.all(path, (req, res) => {\n            this.actionClass.render(req, res);\n        });\n    }\n\n}\n\nexport class RouteResponse {\n\n    controller: any;\n    actionResult: Promise<any>;\n    actionResultValue: any;\n    context: Object;\n    viewPath: string;\n\n    constructor(public target: any,\n                public key: any,\n                public req: express.Request,\n                public res: express.Response,\n                public next: any) {\n\n        this.controller = new target();\n\n        this.controller.request = req;\n        this.controller.response = res;\n\n        this.controller.app = server.express;\n    }\n\n    /**\n     * Execute action method and call express next\n     */\n    public execute(): void {\n        this.actionResult = this.controller[this.key](\n            ...new RouteParams(\n                this.target.prototype,\n                this.controller[this.key],\n                this.controller.request,\n                this.key\n            ).build()\n        );\n\n        if (this.actionResult instanceof Promise) {\n            this.actionResult.then(result => {\n                this.actionResultValue = result;\n                this.next();\n            });\n        } else {\n            this.actionResultValue = this.actionResult;\n            this.next();\n        }\n    }\n\n    /**\n     * Render view if action isn`t restful\n     */\n    public render(req: express.Request, res: express.Response): void {\n        this.log(req, res);\n\n        switch (typeof this.actionResultValue) {\n            case \"object\":\n                if (!this.actionResultValue.hasOwnProperty('statusCode')) {\n                    res.end(JSON.stringify(this.actionResultValue));\n                }\n            break;\n            case \"number\":\n            case \"string\":\n                res.end(this.actionResultValue);\n            break;\n            default:\n                this.setContext();\n                this.setViewParams();\n\n                this.res.render(this.viewPath, this.context);\n            break;\n        }\n\n    }\n\n    /**\n     * Set view params e.g. layout, template and view path\n     */\n    private setViewParams(): void {\n        /*if (this.controller.options.hasOwnProperty('layout') &&\n            !this.controller.hasOwnProperty('layout')) {\n            this.controller['layout'] = this.controller.options.layout;\n        }*/\n\n        if (!this.controller.template) {\n            this.controller.template = this.key.toLowerCase();\n        }\n\n        this.viewPath = path.join(\n            this.controller.constructor.name.slice(0, -10).toLowerCase(),\n            this.controller.template\n        );\n    }\n\n    /**\n     * Set context for handlebars\n     */\n    private setContext(): void {\n        this.context = this.controller;\n\n        for (const key in this.controller.renderVariables) {\n            this.context[key] = this.controller.renderVariables[key];\n        }\n    }\n\n    /**\n     * Log request after response\n     */\n    private log(req, res): void {\n        let status = res.statusCode.toString();\n\n        if (res.statusCode >= 200 && res.statusCode < 300) {\n            status = status.green;\n        }\n        else if (res.statusCode >= 300 && res.statusCode < 500) {\n            status = status.yellow;\n        }\n        else if (res.statusCode >= 500) {\n            status = status.red;\n        }\n\n        Log.message(req.method.cyan.bold, status, req.path);\n    }\n\n}\n"],"sourceRoot":"/source/"}