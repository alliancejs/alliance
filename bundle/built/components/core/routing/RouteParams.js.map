{"version":3,"sources":["components/core/routing/RouteParams.ts"],"names":["RouteParams","RouteParams.constructor","RouteParams.build","RouteParams.pathVariable","RouteParams.requestParam","RouteParams.bodyParam","RouteParams.inject"],"mappings":"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","file":"components/core/routing/RouteParams.js","sourcesContent":["import * as express from 'express';\n\nimport { getParamNames } from '../../lib/ParamNames';\nimport { allianceParams, allianceParamsType, allianceParamAbstract } from '../../../decorators/core/ParamTypes';\n\nexport class RouteParams {\n\n    value: any;\n    paramNames: string[];\n\n    constructor(public target: any, public func: Function, public request: express.Request, public key: string) {\n        // return args;\n    }\n\n    public build(): any[] {\n        let args = [];\n\n        if (Reflect.hasMetadata(allianceParams, this.target, this.key)) {\n            this.paramNames = getParamNames(this.func);\n\n            let argsList = <allianceParamAbstract[]> Reflect.getMetadata(allianceParams, this.target, this.key).sort((a, b) => {\n                return a.parameterIndex > b.parameterIndex;\n            });\n\n            for (let arg of argsList) {\n                switch (arg.type) {\n                    case allianceParamsType.PathVariable:\n                        this.pathVariable(arg);\n                    break;\n                    case allianceParamsType.RequestParam:\n                        this.requestParam(arg);\n                    break;\n                    case allianceParamsType.BodyParam:\n                        this.bodyParam(arg);\n                    break;\n                    case allianceParamsType.Inject:\n                        this.inject(arg);\n                    break;\n                }\n\n                args.push(this.value);\n            }\n        }\n\n        return args;\n    }\n\n    private pathVariable(arg: allianceParamAbstract): void {\n        this.value = this.request.params[ this.paramNames[arg.parameterIndex] ];\n    }\n\n    private requestParam(arg: allianceParamAbstract): void {\n        this.value = this.request.query[ this.paramNames[arg.parameterIndex] ];\n    }\n\n    private bodyParam(arg: allianceParamAbstract): void {\n        this.value = this.request.body[ this.paramNames[arg.parameterIndex] ];\n    }\n\n    private inject(arg: allianceParamAbstract): void {\n        this.value = new arg.target();\n    }\n\n}\n"],"sourceRoot":"/source/"}