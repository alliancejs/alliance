{"version":3,"sources":["components/database/database/Columns.ts"],"names":["decorateColumn"],"mappings":";;;;AAAA,IAAY,SAAS,GAAA,OAAA,CAAO,WAAW,CAAC,CAAA;AACxC,IAAA,UAAA,GAAA,OAAA,CAAmC,YAAY,CAAC,CAAA;AAEhD,IAAI,IAAI,GAA2C,CAC/C,CAAC,QAAQ,EAAE,SAAS,CAAC,MAAM,CAAC,EAC5B,CAAC,SAAS,EAAE,SAAS,CAAC,OAAO,CAAC,EAC9B,CAAC,SAAS,EAAE,SAAS,CAAC,OAAO,CAAC,EAC9B,CAAC,MAAM,EAAE,SAAS,CAAC,IAAI,CAAC,EACxB,CAAC,MAAM,EAAE,SAAS,CAAC,IAAI,CAAC,EACxB,CAAC,QAAQ,EAAE,SAAS,CAAC,MAAM,CAAC,EAC5B,CAAC,OAAO,EAAE,SAAS,CAAC,KAAK,CAAC,EAC1B,CAAC,MAAM,EAAE,SAAS,CAAC,IAAI,CAAC,EACxB,CAAC,QAAQ,EAAE,SAAS,CAAC,MAAM,CAAC,EAC5B,CAAC,SAAS,EAAE,SAAS,CAAC,OAAO,CAAC,EAC9B,CAAC,MAAM,EAAE,SAAS,CAAC,IAAI,CAAC,EACxB,CAAC,MAAM,EAAE,SAAS,CAAC,IAAI,CAAC,EACxB,CAAC,UAAU,EAAE,SAAS,CAAC,QAAQ,CAAC,EAChC,CAAC,QAAQ,EAAE,SAAS,CAAC,MAAM,CAAC,EAC5B,CAAC,MAAM,EAAE,SAAS,CAAC,IAAI,CAAC,EACxB,CAAC,OAAO,EAAE,SAAS,CAAC,KAAK,CAAC,EAC1B,CAAC,KAAK,EAAE,SAAS,CAAC,GAAG,CAAC,EACtB,CAAC,MAAM,EAAE,SAAS,CAAC,IAAI,CAAC,EACxB,CAAC,OAAO,EAAE,SAAS,CAAC,KAAK,CAAC,EAC1B,CAAC,MAAM,EAAE,SAAS,CAAC,IAAI,CAAC,EACxB,CAAC,QAAQ,EAAE,SAAS,CAAC,MAAM,CAAC,EAC5B,CAAC,SAAS,EAAE,SAAS,CAAC,OAAO,CAAC,EAC9B,CAAC,MAAM,EAAE,SAAS,CAAC,IAAI,CAAC,EACxB,CAAC,OAAO,EAAE,SAAS,CAAC,KAAK,CAAC,EAC1B,CAAC,UAAU,EAAE,SAAS,CAAC,QAAQ,CAAC,CACnC,CAAA;AAEU,OAAA,CAAA,MAAM,GAAW,EAAE,CAAC;AACpB,OAAA,CAAA,UAAU,GAAW,EAAE,CAAC;;;;;;;;;YAEzB,GAAG;YAAE,KAAK;;AAChB,eAAA,CAAA,MAAM,CAAC,GAAG,CAAC,GAAG;+CAAI,MAAM;AAAN,sBAAM;;;mBAAU,cAAc,mBAAC,KAAK,SAAK,MAAM,EAAC;SAAA,CAAC;AACnE,eAAA,CAAA,UAAU,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;;;AAF5B,yBAAyB,IAAI,8HAAE;;KAG9B;;;;;;;;;;;;;;;;AAED,SAAA,cAAA,CAAwB,IAAS,EAAW;sCAAN,MAAM;AAAN,cAAM;;;AACxCA,QAAIA,MAAMA,CAACA,CAACA,CAACA,YAAYA,MAAMA,IAAIA,MAAMA,CAACA,CAACA,CAACA,CAACA,WAAWA,CAACA,IAAIA,KAAKA,QAAQA,EAAEA;AACxEA,kBAAAA,CAAAA,QAAQA,CAACA,cAAcA,CAACA,IAAIA,EAAEA,MAAMA,CAACA,CAACA,CAACA,CAACA,WAAWA,EAAEA,MAAMA,CAACA,CAACA,CAACA,CAACA,CAACA;KACnEA,MAAMA;AACHA,eAAOA,UAACA,MAAMA,EAAEA,GAAGA,EAAAA;AACfA,sBAAAA,CAAAA,QAAQA,CAACA,cAAcA,CAACA,IAAIA,kBAAIA,MAAMA,CAACA,EAAEA,MAAMA,CAACA,WAAWA,EAAEA,GAAGA,CAACA,CAACA;SACrEA,CAAAA;KACJA;CACJA","file":"components/database/database/Columns.js","sourcesContent":["import * as sequelize  from 'sequelize';\nimport { Database, database } from './Database';\n\nlet cols: [string, sequelize.DataTypeAbstract][] = [\n    ['string', sequelize.STRING],\n    ['integer', sequelize.INTEGER],\n    ['boolean', sequelize.BOOLEAN],\n    ['char', sequelize.CHAR],\n    ['text', sequelize.TEXT],\n    ['bigint', sequelize.BIGINT],\n    ['float', sequelize.FLOAT],\n    ['real', sequelize.REAL],\n    ['double', sequelize.DOUBLE],\n    ['decimal', sequelize.DECIMAL],\n    ['time', sequelize.TIME],\n    ['date', sequelize.DATE],\n    ['dateonly', sequelize.DATEONLY],\n    ['hstore', sequelize.HSTORE],\n    ['json', sequelize.JSON],\n    ['jsonb', sequelize.JSONB],\n    ['now', sequelize.NOW],\n    ['blob', sequelize.BLOB],\n    ['range', sequelize.RANGE],\n    ['uuid', sequelize.UUID],\n    ['uuidv4', sequelize.UUIDV4],\n    ['virtual', sequelize.VIRTUAL],\n    ['enum', sequelize.ENUM],\n    ['array', sequelize.ARRAY],\n    ['geometry', sequelize.GEOMETRY]\n]\n\nexport let Column: Object = {};\nexport let ColumnType: Object = {};\n\nfor (let [key, value] of cols) {\n    Column[key] = (...params): any => decorateColumn(value, ...params);\n    ColumnType[key] = value;\n}\n\nfunction decorateColumn(type: any, ...params): any {\n    if (params[0] instanceof Object && params[0].constructor.name !== 'Object') {\n        database.registerColumn(type, params[0].constructor, params[1]);\n    } else {\n        return (target, key) => {\n            database.registerColumn(type(...params), target.constructor, key);\n        }\n    }\n}\n"],"sourceRoot":"/source/"}