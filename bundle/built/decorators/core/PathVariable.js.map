{"version":3,"sources":["decorators/core/PathVariable.ts"],"names":["PathVariable"],"mappings":";;AAAA,IAAA,YAAA,GAAA,OAAA,CAA0E,cAAc,CAAC,CAAA;AAEzF,SAAA,YAAA,CAA6B,MAAc,EAAE,WAA0B,EAAE,cAAsB,EAAA;AAE3FA,QAAIA,IAAIA,GAA4BA,OAAOA,CAACA,WAAWA,CAACA,YAAAA,CAAAA,cAAcA,EAAEA,MAAMA,EAAEA,WAAWA,CAACA,IAAIA,EAAEA,CAACA;AAEnGA,QAAIA,CAACA,IAAIA,CAACA;AACNA,YAAIA,EAAEA,YAAAA,CAAAA,kBAAkBA,CAACA,YAAYA;AACrCA,sBAAcA,EAAEA,cAAcA;KACjCA,CAACA,CAACA;AAEHA,WAAOA,CAACA,cAAcA,CAACA,YAAAA,CAAAA,cAAcA,EAAEA,IAAIA,EAAEA,MAAMA,EAAEA,WAAWA,CAACA,CAACA;CAErEA;AAXe,OAAA,CAAA,YAAY,GAAA,YAW3B,CAAA","file":"decorators/core/PathVariable.js","sourcesContent":["import { allianceParams, allianceParamsType, allianceParamAbstract } from './ParamTypes';\n\nexport function PathVariable(target: Object, propertyKey: string|symbol, parameterIndex: number) {\n\n    let args: allianceParamAbstract[] = Reflect.getMetadata(allianceParams, target, propertyKey) || [];\n\n    args.push({\n        type: allianceParamsType.PathVariable,\n        parameterIndex: parameterIndex\n    });\n\n    Reflect.defineMetadata(allianceParams, args, target, propertyKey);\n\n}\n"],"sourceRoot":"/source/"}