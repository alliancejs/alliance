{"version":3,"sources":["decorators/db/Relationships.ts"],"names":["hasMany","hasOne","belongsTo","belongsToMany"],"mappings":";;AAAA,IAAA,UAAA,GAAA,OAAA,CAAqD,6CAA6C,CAAC,CAAA;AAEnG,SAAA,OAAA,CAAwB,MAAgB,EAAE,GAAY,EAAA;AAClDA,QAAIA,CAACA,GAAGA,EAAEA;AAAEA,eAAOA,UAACA,CAACA,EAAEA,CAACA;mBAAKA,UAAAA,CAAAA,QAAQA,CAACA,oBAAoBA,CAACA,CAACA,EAAEA,CAACA,EAAEA,UAAAA,CAAAA,gBAAgBA,CAACA,OAAOA,EAAEA,MAAMA,CAACA;SAAAA,CAAAA;KAAEA;AACpGA,cAAAA,CAAAA,QAAQA,CAACA,oBAAoBA,CAACA,MAAMA,EAAEA,GAAGA,EAAEA,UAAAA,CAAAA,gBAAgBA,CAACA,OAAOA,EAAEA,EAAEA,CAACA,CAACA;CAC5EA;AAHe,OAAA,CAAA,OAAO,GAAA,OAGtB,CAAA;AAED,SAAA,MAAA,CAAuB,MAAgB,EAAE,GAAY,EAAA;AACjDC,QAAIA,CAACA,GAAGA,EAAEA;AAAEA,eAAOA,UAACA,CAACA,EAAEA,CAACA;mBAAKA,UAAAA,CAAAA,QAAQA,CAACA,oBAAoBA,CAACA,CAACA,EAAEA,CAACA,EAAEA,UAAAA,CAAAA,gBAAgBA,CAACA,MAAMA,EAAEA,MAAMA,CAACA;SAAAA,CAAAA;KAAEA;AACnGA,cAAAA,CAAAA,QAAQA,CAACA,oBAAoBA,CAACA,MAAMA,EAAEA,GAAGA,EAAEA,UAAAA,CAAAA,gBAAgBA,CAACA,MAAMA,EAAEA,EAAEA,CAACA,CAACA;CAC3EA;AAHe,OAAA,CAAA,MAAM,GAAA,MAGrB,CAAA;AAED,SAAA,SAAA,CAA0B,MAAgB,EAAE,GAAY,EAAA;AACpDC,QAAIA,CAACA,GAAGA,EAAEA;AAAEA,eAAOA,UAACA,CAACA,EAAEA,CAACA;mBAAKA,UAAAA,CAAAA,QAAQA,CAACA,oBAAoBA,CAACA,CAACA,EAAEA,CAACA,EAAEA,UAAAA,CAAAA,gBAAgBA,CAACA,SAASA,EAAEA,MAAMA,CAACA;SAAAA,CAAAA;KAAEA;AACtGA,cAAAA,CAAAA,QAAQA,CAACA,oBAAoBA,CAACA,MAAMA,EAAEA,GAAGA,EAAEA,UAAAA,CAAAA,gBAAgBA,CAACA,SAASA,EAAEA,EAAEA,CAACA,CAACA;CAC9EA;AAHe,OAAA,CAAA,SAAS,GAAA,SAGxB,CAAA;AAED,SAAA,aAAA,CAA8B,MAAgB,EAAE,GAAY,EAAA;AACxDC,QAAIA,CAACA,GAAGA,EAAEA;AAAEA,eAAOA,UAACA,CAACA,EAAEA,CAACA;mBAAKA,UAAAA,CAAAA,QAAQA,CAACA,oBAAoBA,CAACA,CAACA,EAAEA,CAACA,EAAEA,UAAAA,CAAAA,gBAAgBA,CAACA,aAAaA,EAAEA,MAAMA,CAACA;SAAAA,CAAAA;KAAEA;AAC1GA,cAAAA,CAAAA,QAAQA,CAACA,oBAAoBA,CAACA,MAAMA,EAAEA,GAAGA,EAAEA,UAAAA,CAAAA,gBAAgBA,CAACA,aAAaA,EAAEA,EAAEA,CAACA,CAACA;CAClFA;AAHe,OAAA,CAAA,aAAa,GAAA,aAG5B,CAAA","file":"decorators/db/Relationships.js","sourcesContent":["import { Database, RelationshipType, database } from '../../components/database/database/Database';\n\nexport function hasMany(target: Function, key?: string) {\n    if (!key) { return (t, k) => database.registerRelationship(t, k, RelationshipType.hasMany, target) }\n    database.registerRelationship(target, key, RelationshipType.hasMany, {});\n}\n\nexport function hasOne(target: Function, key?: string) {\n    if (!key) { return (t, k) => database.registerRelationship(t, k, RelationshipType.hasOne, target) }\n    database.registerRelationship(target, key, RelationshipType.hasOne, {});\n}\n\nexport function belongsTo(target: Function, key?: string) {\n    if (!key) { return (t, k) => database.registerRelationship(t, k, RelationshipType.belongsTo, target) }\n    database.registerRelationship(target, key, RelationshipType.belongsTo, {});\n}\n\nexport function belongsToMany(target: Function, key?: string) {\n    if (!key) { return (t, k) => database.registerRelationship(t, k, RelationshipType.belongsToMany, target) }\n    database.registerRelationship(target, key, RelationshipType.belongsToMany, {});\n}\n"],"sourceRoot":"/source/"}